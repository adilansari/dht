{"name":"Dht","tagline":"Distributed Hash Table based on Chord design","body":"# Distributed Hash Table\r\n=========================================================\r\n***\r\n* Simple Key-Value storage based on Chord design.\r\n* Simplified version of Chord, covers three things:\r\n    * ID space partitioning/re-partitioning.\r\n    * Ring based routing\r\n    * Node joins\r\n\r\n* SHA-1 hash function is used to lexically arrange nodes in a ring and find the location for a particular key to be stored.\r\n* Each node maintains a successor and predecessor pointer for nodes in the ring.\r\n* Content Provider is NoSQL storage that:\r\n    - The first column should be named as “key”. This column is used to store all keys. \r\n    - The first column should be named as “value”. This column is used to store all values.\r\n\r\n\r\n* However, Node failures, concurrent node-joins and finger tables are not implemented.\r\n\r\n\r\n### PTest\r\n\r\n- Inserts 50 arbitrary key-value pairs in the DHT and queries to check if they exist and returns success/failure messages.\r\n\r\n\r\n### LDump\r\n\r\n- When touched, this button dumps and displays all the <key, value> pairs stored in your local partition of the node.\r\n\r\n\r\n### GDump\r\n\r\n- When touched, this button dumps and displays all the <key, value> pairs stored in your whole DHT.\r\n\r\n\r\n\r\n## References\r\n\r\n[1] Read about Chord [here](http://conferences.sigcomm.org/sigcomm/2001/p12-stoica.pdf)\r\n\r\n[2] Single best resource on Android, [Android dev](http://developer.android.com)\r\n\r\n[3] Link to Chord repository on Github, [here](https://github.com/sit/dht/wiki)\r\n\r\n\r\n***\r\n##Contact\r\n\r\n* [E-mail](mailto: me@adilansari.com)\r\n* [@adilansari](http://twitter.com/adilansari)\r\n* [HomePage](http://www.adilansari.com)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}